Search.setIndex({"alltitles": {"Acknowledgement": [[10, "acknowledgement"]], "Adversary Model and Threat Analysis": [[9, "adversary-model-and-threat-analysis"]], "Articles": [[10, "articles"]], "Code Documentation": [[2, null]], "Completeness Validation": [[0, "completeness-validation"]], "Contents:": [[8, null]], "Indices and tables": [[8, "indices-and-tables"]], "Installation": [[10, "installation"]], "Installation (Package)": [[10, "installation-package"]], "Installation (from source)": [[10, "installation-from-source"]], "Introduction": [[10, null]], "Max2SAT Instance Generation": [[0, "max2sat-instance-generation"]], "Performance and Security Analysis": [[0, null]], "Potential attacks and the adversary model.": [[9, "id31"]], "Prerequisites": [[10, "prerequisites"]], "Prover Related Tasks": [[0, "prover-related-tasks"]], "References": [[1, null]], "SDZKP Documentation": [[8, null]], "SDZKP Specification": [[9, null]], "SDZKP package": [[10, "sdzkp-package"]], "Security Related Validation": [[0, "security-related-validation"]], "Security Requirements": [[9, "security-requirements"]], "Setup Related Tasks": [[0, "setup-related-tasks"]], "Software Design Model": [[9, "software-design-model"]], "Software Top-level Design": [[9, "software-top-level-design"]], "Soundness Validation": [[0, "soundness-validation"]], "Subgroup Distance Problem Generation": [[0, "subgroup-distance-problem-generation"]], "Verifier Related Tasks": [[0, "verifier-related-tasks"]], "ZKP Performance Metrics": [[9, "zkp-performance-metrics"]], "sdzkp.elementaryabeliansubgroup": [[3, null]], "sdzkp.max2sat": [[4, null]], "sdzkp.prover": [[5, null]], "sdzkp.sgd": [[6, null]], "sdzkp.verifier": [[7, null]]}, "docnames": ["analysis", "bibliography", "code", "generated/sdzkp.elementaryabeliansubgroup", "generated/sdzkp.max2sat", "generated/sdzkp.prover", "generated/sdzkp.sgd", "generated/sdzkp.verifier", "index", "requirements", "sdzkp"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["analysis.rst", "bibliography.rst", "code.rst", "generated/sdzkp.elementaryabeliansubgroup.rst", "generated/sdzkp.max2sat.rst", "generated/sdzkp.prover.rst", "generated/sdzkp.sgd.rst", "generated/sdzkp.verifier.rst", "index.rst", "requirements.rst", "sdzkp.rst"], "indexentries": {"add_clause() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.add_clause", false]], "add_random_3bits_to_solution_generators() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.add_random_3bits_to_solution_generators", false]], "apply_generators() (sdzkp.elementaryabeliansubgroup.elementaryabeliansubgroup method)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroup.apply_generators", false]], "average_support (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.average_support", false]], "blinder (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.blinder", false]], "c (sdzkp.sgd.subgroupdistanceround attribute)": [[6, "sdzkp.sgd.SubgroupDistanceRound.c", false]], "check_instance() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.check_instance", false]], "clauses (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.clauses", false]], "commit() (sdzkp.prover.dishonestprover method)": [[5, "sdzkp.prover.DishonestProver.commit", false]], "commit() (sdzkp.prover.prover method)": [[5, "sdzkp.prover.Prover.commit", false]], "convert_binary_permutation_to_arrayform_using_blinder() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.convert_binary_permutation_to_arrayform_using_blinder", false]], "convert_generators_to_arrayform_using_blinder() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.convert_generators_to_arrayform_using_blinder", false]], "convert_max2sat_solution_to_subgroupdistance_solution() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.convert_max2sat_solution_to_subgroupdistance_solution", false]], "create_default() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.create_default", false]], "create_from_linearized_generators() (sdzkp.sgd.subgroupdistanceproblem class method)": [[6, "sdzkp.sgd.SubgroupDistanceProblem.create_from_linearized_generators", false]], "create_x_for_variable_i() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.create_x_for_variable_i", false]], "create_y_for_variable_i() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.create_y_for_variable_i", false]], "create_y_for_variable_i_clause_j() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.create_y_for_variable_i_clause_j", false]], "dishonestprover (class in sdzkp.prover)": [[5, "sdzkp.prover.DishonestProver", false]], "elementaryabeliansubgroup (class in sdzkp.elementaryabeliansubgroup)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroup", false]], "elementaryabeliansubgroupwithsolution (class in sdzkp.elementaryabeliansubgroup)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroupWithSolution", false]], "enumerate_all_assignments() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.enumerate_all_assignments", false]], "extend_generator() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.extend_generator", false]], "extend_sdp() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.extend_sdp", false]], "g (sdzkp.sgd.subgroupdistanceproblem attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblem.g", false]], "g (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.g", false]], "g (sdzkp.sgd.subgroupdistanceround attribute)": [[6, "sdzkp.sgd.SubgroupDistanceRound.G", false]], "generate_all_elements() (sdzkp.elementaryabeliansubgroup.elementaryabeliansubgroup method)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroup.generate_all_elements", false]], "generate_commitment() (sdzkp.sgd.subgroupdistanceround method)": [[6, "sdzkp.sgd.SubgroupDistanceRound.generate_commitment", false]], "generate_commitments() (sdzkp.sgd.subgroupdistanceround method)": [[6, "sdzkp.sgd.SubgroupDistanceRound.generate_commitments", false]], "generate_element_from_bitarray() (sdzkp.elementaryabeliansubgroup.elementaryabeliansubgroup method)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroup.generate_element_from_bitarray", false]], "generate_instance_motoki() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.generate_instance_motoki", false]], "generate_permutation_g_in_sn() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.generate_permutation_g_in_Sn", false]], "generate_random_3bits() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.generate_random_3bits", false]], "generate_random_array() (sdzkp.sgd.subgroupdistanceround method)": [[6, "sdzkp.sgd.SubgroupDistanceRound.generate_random_array", false]], "generate_random_blinder() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.generate_random_blinder", false]], "generate_satisfiable_clause() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.generate_satisfiable_clause", false]], "generate_unsatisfiable_clause() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.generate_unsatisfiable_clause", false]], "generate_unsatisfiable_specific_clause() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.generate_unsatisfiable_specific_clause", false]], "generate_z1_and_z2() (sdzkp.sgd.subgroupdistanceround method)": [[6, "sdzkp.sgd.SubgroupDistanceRound.generate_Z1_and_Z2", false]], "generators (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.generators", false]], "generators_arrayform (sdzkp.sgd.subgroupdistanceproblem attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblem.generators_arrayform", false]], "generators_arrayform (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.generators_arrayform", false]], "generators_support (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.generators_support", false]], "get_bit_i_of_generators() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.get_bit_i_of_generators", false]], "group_triplets() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.group_triplets", false]], "grpc_stub (sdzkp.prover.dishonestprover attribute)": [[5, "sdzkp.prover.DishonestProver.grpc_stub", false]], "grpc_stub (sdzkp.prover.honestprover attribute)": [[5, "sdzkp.prover.HonestProver.grpc_stub", false]], "grpc_stub (sdzkp.prover.prover attribute)": [[5, "sdzkp.prover.Prover.grpc_stub", false]], "h (sdzkp.sgd.subgroupdistanceproblem attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblem.H", false]], "h (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.H", false], [6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.h", false]], "h_withsolution (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.H_WithSolution", false]], "hamming_distance() (sdzkp.elementaryabeliansubgroup.elementaryabeliansubgroup method)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroup.hamming_distance", false]], "hamming_distance() (sdzkp.sgd.subgroupdistanceproblem method)": [[6, "sdzkp.sgd.SubgroupDistanceProblem.hamming_distance", false]], "handlecommit() (sdzkp.verifier.verifier method)": [[7, "sdzkp.verifier.Verifier.handleCommit", false]], "handlesetup() (sdzkp.verifier.verifier method)": [[7, "sdzkp.verifier.Verifier.handleSetup", false]], "handleverify() (sdzkp.verifier.verifier method)": [[7, "sdzkp.verifier.Verifier.handleVerify", false]], "hash() (sdzkp.sgd.subgroupdistanceround method)": [[6, "sdzkp.sgd.SubgroupDistanceRound.hash", false]], "honestprover (class in sdzkp.prover)": [[5, "sdzkp.prover.HonestProver", false]], "instance_id (sdzkp.prover.dishonestprover attribute)": [[5, "sdzkp.prover.DishonestProver.instance_id", false]], "instance_id (sdzkp.prover.honestprover attribute)": [[5, "sdzkp.prover.HonestProver.instance_id", false]], "instance_id (sdzkp.prover.prover attribute)": [[5, "sdzkp.prover.Prover.instance_id", false]], "instance_id (sdzkp.verifier.verifier attribute)": [[7, "sdzkp.verifier.Verifier.instance_id", false]], "inverse() (sdzkp.elementaryabeliansubgroup.elementaryabeliansubgroup method)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroup.inverse", false]], "inverse_permutation() (sdzkp.elementaryabeliansubgroup.elementaryabeliansubgroup method)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroup.inverse_permutation", false]], "is_clause_satisfied() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.is_clause_satisfied", false]], "is_satisfiable() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.is_satisfiable", false]], "is_valid_permutation() (sdzkp.elementaryabeliansubgroup.elementaryabeliansubgroup method)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroup.is_valid_permutation", false]], "k (sdzkp.sgd.subgroupdistanceproblem attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblem.K", false]], "k (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.K", false]], "k_prime (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.K_prime", false]], "linearize_generators() (sdzkp.sgd.subgroupdistanceproblem method)": [[6, "sdzkp.sgd.SubgroupDistanceProblem.linearize_generators", false]], "m (sdzkp.sgd.subgroupdistanceproblem attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblem.m", false]], "m (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.m", false]], "max2sat (class in sdzkp.max2sat)": [[4, "sdzkp.max2sat.Max2SAT", false]], "max2sat_instance_solution (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.max2sat_instance_solution", false]], "module": [[3, "module-sdzkp.elementaryabeliansubgroup", false], [4, "module-sdzkp.max2sat", false], [5, "module-sdzkp.prover", false], [6, "module-sdzkp.sgd", false], [7, "module-sdzkp.verifier", false]], "multiply_generators() (sdzkp.elementaryabeliansubgroup.elementaryabeliansubgroup method)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroup.multiply_generators", false]], "multiply_permutations() (sdzkp.elementaryabeliansubgroup.elementaryabeliansubgroup method)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroup.multiply_permutations", false]], "multiply_solution_generators() (sdzkp.elementaryabeliansubgroup.elementaryabeliansubgroupwithsolution method)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroupWithSolution.multiply_solution_generators", false]], "n (sdzkp.sgd.subgroupdistanceproblem attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblem.n", false]], "n (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.n", false]], "negate_literals() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.negate_literals", false]], "num_transpositions_in_generators (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.num_transpositions_in_generators", false]], "number_of_rounds (sdzkp.prover.dishonestprover attribute)": [[5, "sdzkp.prover.DishonestProver.number_of_rounds", false]], "number_of_rounds (sdzkp.prover.honestprover attribute)": [[5, "sdzkp.prover.HonestProver.number_of_rounds", false]], "number_of_rounds (sdzkp.prover.prover attribute)": [[5, "sdzkp.prover.Prover.number_of_rounds", false]], "p (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.p", false]], "print_all_elements() (sdzkp.elementaryabeliansubgroup.elementaryabeliansubgroup method)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroup.print_all_elements", false]], "print_clause() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.print_clause", false]], "print_generators() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.print_generators", false]], "print_generators_arrayform() (sdzkp.sgd.subgroupdistanceproblem method)": [[6, "sdzkp.sgd.SubgroupDistanceProblem.print_generators_arrayform", false]], "print_generators_arrayform() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.print_generators_arrayform", false]], "print_instance() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.print_instance", false]], "prover (class in sdzkp.prover)": [[5, "sdzkp.prover.Prover", false]], "q (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.q", false]], "q_original (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.q_original", false]], "r (sdzkp.sgd.subgroupdistanceround attribute)": [[6, "sdzkp.sgd.SubgroupDistanceRound.R", false], [6, "sdzkp.sgd.SubgroupDistanceRound.r", false]], "random_binary_array() (sdzkp.elementaryabeliansubgroup.elementaryabeliansubgroup method)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroup.random_binary_array", false]], "random_element() (sdzkp.elementaryabeliansubgroup.elementaryabeliansubgroup method)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroup.random_element", false]], "read_dimacs_file() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.read_dimacs_file", false]], "read_filenames_in_folder() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.read_filenames_in_folder", false]], "read_solution_from_file() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.read_solution_from_file", false]], "reduce_to_sdp_and_extend() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.reduce_to_sdp_and_extend", false]], "reduce_to_sdp_for_variable_i() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.reduce_to_sdp_for_variable_i", false]], "response() (sdzkp.prover.prover method)": [[5, "sdzkp.prover.Prover.response", false]], "round_data (sdzkp.sgd.subgroupdistanceproblem attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblem.round_data", false]], "round_result (sdzkp.sgd.subgroupdistanceround attribute)": [[6, "sdzkp.sgd.SubgroupDistanceRound.round_result", false]], "run() (sdzkp.prover.prover method)": [[5, "sdzkp.prover.Prover.run", false]], "run_round() (sdzkp.prover.prover method)": [[5, "sdzkp.prover.Prover.run_round", false]], "s (sdzkp.sgd.subgroupdistanceround attribute)": [[6, "sdzkp.sgd.SubgroupDistanceRound.s", false]], "sdzkp.elementaryabeliansubgroup": [[3, "module-sdzkp.elementaryabeliansubgroup", false]], "sdzkp.max2sat": [[4, "module-sdzkp.max2sat", false]], "sdzkp.prover": [[5, "module-sdzkp.prover", false]], "sdzkp.sgd": [[6, "module-sdzkp.sgd", false]], "sdzkp.verifier": [[7, "module-sdzkp.verifier", false]], "set_seed() (sdzkp.sgd.subgroupdistanceround method)": [[6, "sdzkp.sgd.SubgroupDistanceRound.set_seed", false]], "setup() (sdzkp.prover.prover method)": [[5, "sdzkp.prover.Prover.setup", false]], "setup_sdzkp_round() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.setup_sdzkp_round", false]], "sgd (sdzkp.prover.dishonestprover attribute)": [[5, "sdzkp.prover.DishonestProver.SGD", false]], "sgd (sdzkp.prover.honestprover attribute)": [[5, "sdzkp.prover.HonestProver.SGD", false]], "sgd (sdzkp.prover.prover attribute)": [[5, "sdzkp.prover.Prover.SGD", false]], "sgd (sdzkp.verifier.verifier attribute)": [[7, "sdzkp.verifier.Verifier.SGD", false]], "solution_t_h (sdzkp.sgd.subgroupdistanceproblemwithsolution attribute)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.solution_t_h", false]], "solve() (sdzkp.elementaryabeliansubgroup.elementaryabeliansubgroup method)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroup.solve", false]], "solve() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.solve", false]], "subgroupdistanceproblem (class in sdzkp.sgd)": [[6, "sdzkp.sgd.SubgroupDistanceProblem", false]], "subgroupdistanceproblemwithsolution (class in sdzkp.sgd)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution", false]], "subgroupdistanceround (class in sdzkp.sgd)": [[6, "sdzkp.sgd.SubgroupDistanceRound", false]], "t_r (sdzkp.sgd.subgroupdistanceround attribute)": [[6, "sdzkp.sgd.SubgroupDistanceRound.t_r", false]], "t_u (sdzkp.sgd.subgroupdistanceround attribute)": [[6, "sdzkp.sgd.SubgroupDistanceRound.t_u", false]], "test_membership() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.test_membership", false]], "transpose() (sdzkp.elementaryabeliansubgroup.elementaryabeliansubgroup method)": [[3, "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroup.transpose", false]], "u (sdzkp.sgd.subgroupdistanceround attribute)": [[6, "sdzkp.sgd.SubgroupDistanceRound.U", false]], "verifier (class in sdzkp.verifier)": [[7, "sdzkp.verifier.Verifier", false]], "verify_0() (sdzkp.verifier.verifier method)": [[7, "sdzkp.verifier.Verifier.verify_0", false]], "verify_1() (sdzkp.verifier.verifier method)": [[7, "sdzkp.verifier.Verifier.verify_1", false]], "verify_2() (sdzkp.verifier.verifier method)": [[7, "sdzkp.verifier.Verifier.verify_2", false]], "write_solution_to_file() (sdzkp.max2sat.max2sat method)": [[4, "sdzkp.max2sat.Max2SAT.write_solution_to_file", false]], "xor_and_check_combinations() (sdzkp.sgd.subgroupdistanceproblemwithsolution method)": [[6, "sdzkp.sgd.SubgroupDistanceProblemWithSolution.xor_and_check_combinations", false]]}, "objects": {"sdzkp": [[3, 0, 0, "-", "elementaryabeliansubgroup"], [4, 0, 0, "-", "max2sat"], [5, 0, 0, "-", "prover"], [6, 0, 0, "-", "sgd"], [7, 0, 0, "-", "verifier"]], "sdzkp.elementaryabeliansubgroup": [[3, 1, 1, "", "ElementaryAbelianSubgroup"], [3, 1, 1, "", "ElementaryAbelianSubgroupWithSolution"]], "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroup": [[3, 2, 1, "", "apply_generators"], [3, 2, 1, "", "generate_all_elements"], [3, 2, 1, "", "generate_element_from_bitarray"], [3, 2, 1, "", "hamming_distance"], [3, 2, 1, "", "inverse"], [3, 2, 1, "", "inverse_permutation"], [3, 2, 1, "", "is_valid_permutation"], [3, 2, 1, "", "multiply_generators"], [3, 2, 1, "", "multiply_permutations"], [3, 2, 1, "", "print_all_elements"], [3, 2, 1, "", "random_binary_array"], [3, 2, 1, "", "random_element"], [3, 2, 1, "", "solve"], [3, 2, 1, "", "transpose"]], "sdzkp.elementaryabeliansubgroup.ElementaryAbelianSubgroupWithSolution": [[3, 2, 1, "", "multiply_solution_generators"]], "sdzkp.max2sat": [[4, 1, 1, "", "Max2SAT"]], "sdzkp.max2sat.Max2SAT": [[4, 2, 1, "", "add_clause"], [4, 2, 1, "", "check_instance"], [4, 2, 1, "", "create_default"], [4, 2, 1, "", "enumerate_all_assignments"], [4, 2, 1, "", "generate_instance_motoki"], [4, 2, 1, "", "generate_satisfiable_clause"], [4, 2, 1, "", "generate_unsatisfiable_clause"], [4, 2, 1, "", "generate_unsatisfiable_specific_clause"], [4, 2, 1, "", "is_clause_satisfied"], [4, 2, 1, "", "is_satisfiable"], [4, 2, 1, "", "negate_literals"], [4, 2, 1, "", "print_clause"], [4, 2, 1, "", "print_instance"], [4, 2, 1, "", "read_dimacs_file"], [4, 2, 1, "", "read_filenames_in_folder"], [4, 2, 1, "", "read_solution_from_file"], [4, 2, 1, "", "solve"], [4, 2, 1, "", "write_solution_to_file"]], "sdzkp.prover": [[5, 1, 1, "", "DishonestProver"], [5, 1, 1, "", "HonestProver"], [5, 1, 1, "", "Prover"]], "sdzkp.prover.DishonestProver": [[5, 3, 1, "", "SGD"], [5, 2, 1, "", "commit"], [5, 3, 1, "", "grpc_stub"], [5, 3, 1, "", "instance_id"], [5, 3, 1, "", "number_of_rounds"]], "sdzkp.prover.HonestProver": [[5, 3, 1, "", "SGD"], [5, 3, 1, "", "grpc_stub"], [5, 3, 1, "", "instance_id"], [5, 3, 1, "", "number_of_rounds"]], "sdzkp.prover.Prover": [[5, 3, 1, "", "SGD"], [5, 2, 1, "", "commit"], [5, 3, 1, "", "grpc_stub"], [5, 3, 1, "", "instance_id"], [5, 3, 1, "", "number_of_rounds"], [5, 2, 1, "", "response"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_round"], [5, 2, 1, "", "setup"]], "sdzkp.sgd": [[6, 1, 1, "", "SubgroupDistanceProblem"], [6, 1, 1, "", "SubgroupDistanceProblemWithSolution"], [6, 1, 1, "", "SubgroupDistanceRound"]], "sdzkp.sgd.SubgroupDistanceProblem": [[6, 3, 1, "", "H"], [6, 3, 1, "", "K"], [6, 2, 1, "", "create_from_linearized_generators"], [6, 3, 1, "", "g"], [6, 3, 1, "", "generators_arrayform"], [6, 2, 1, "", "hamming_distance"], [6, 2, 1, "", "linearize_generators"], [6, 3, 1, "", "m"], [6, 3, 1, "", "n"], [6, 2, 1, "", "print_generators_arrayform"], [6, 3, 1, "", "round_data"]], "sdzkp.sgd.SubgroupDistanceProblemWithSolution": [[6, 3, 1, "", "H"], [6, 3, 1, "", "H_WithSolution"], [6, 3, 1, "", "K"], [6, 3, 1, "", "K_prime"], [6, 2, 1, "", "add_random_3bits_to_solution_generators"], [6, 3, 1, "", "average_support"], [6, 3, 1, "", "blinder"], [6, 3, 1, "", "clauses"], [6, 2, 1, "", "convert_binary_permutation_to_arrayform_using_blinder"], [6, 2, 1, "", "convert_generators_to_arrayform_using_blinder"], [6, 2, 1, "", "convert_max2sat_solution_to_subgroupdistance_solution"], [6, 2, 1, "", "create_x_for_variable_i"], [6, 2, 1, "", "create_y_for_variable_i"], [6, 2, 1, "", "create_y_for_variable_i_clause_j"], [6, 2, 1, "", "extend_generator"], [6, 2, 1, "", "extend_sdp"], [6, 3, 1, "", "g"], [6, 2, 1, "", "generate_permutation_g_in_Sn"], [6, 2, 1, "", "generate_random_3bits"], [6, 2, 1, "", "generate_random_blinder"], [6, 3, 1, "", "generators"], [6, 3, 1, "", "generators_arrayform"], [6, 3, 1, "", "generators_support"], [6, 2, 1, "", "get_bit_i_of_generators"], [6, 2, 1, "", "group_triplets"], [6, 3, 1, "", "h"], [6, 3, 1, "", "m"], [6, 3, 1, "", "max2sat_instance_solution"], [6, 3, 1, "", "n"], [6, 3, 1, "", "num_transpositions_in_generators"], [6, 3, 1, "", "p"], [6, 2, 1, "", "print_generators"], [6, 2, 1, "", "print_generators_arrayform"], [6, 3, 1, "", "q"], [6, 3, 1, "", "q_original"], [6, 2, 1, "", "reduce_to_sdp_and_extend"], [6, 2, 1, "", "reduce_to_sdp_for_variable_i"], [6, 2, 1, "", "setup_sdzkp_round"], [6, 3, 1, "", "solution_t_h"], [6, 2, 1, "", "test_membership"], [6, 2, 1, "", "xor_and_check_combinations"]], "sdzkp.sgd.SubgroupDistanceRound": [[6, 3, 1, "", "G"], [6, 3, 1, "", "R"], [6, 3, 1, "", "U"], [6, 3, 1, "", "c"], [6, 2, 1, "", "generate_Z1_and_Z2"], [6, 2, 1, "", "generate_commitment"], [6, 2, 1, "", "generate_commitments"], [6, 2, 1, "", "generate_random_array"], [6, 2, 1, "", "hash"], [6, 3, 1, "", "r"], [6, 3, 1, "", "round_result"], [6, 3, 1, "", "s"], [6, 2, 1, "", "set_seed"], [6, 3, 1, "", "t_r"], [6, 3, 1, "", "t_u"]], "sdzkp.verifier": [[7, 1, 1, "", "Verifier"]], "sdzkp.verifier.Verifier": [[7, 3, 1, "", "SGD"], [7, 2, 1, "", "handleCommit"], [7, 2, 1, "", "handleSetup"], [7, 2, 1, "", "handleVerify"], [7, 3, 1, "", "instance_id"], [7, 2, 1, "", "verify_0"], [7, 2, 1, "", "verify_1"], [7, 2, 1, "", "verify_2"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute"}, "terms": {"": [0, 1, 4, 6, 7, 9], "0": [0, 1, 3, 4, 7, 9], "00": 0, "001": 0, "00395": [1, 10], "02883253": 1, "0know": 10, "1": [0, 1, 3, 4, 7, 9], "10": [0, 1], "100": 0, "1000": 0, "1016": 1, "101988": 1, "102374": 1, "103": 1, "1039488": 1, "1039489": 1, "11": 1, "112": 1, "1145": 1, "11th": 1, "12": [1, 10], "120": 0, "128": [0, 1], "13350": [1, 10], "156": 1, "16": 0, "18": [1, 9], "186": 1, "189": 1, "19": [1, 9], "194": 1, "198": 1, "1983": 1, "1985": 1, "1986": 1, "1987": 1, "1988": 1, "1989": 1, "1992": 1, "2": [0, 1, 4, 7, 9, 10], "20": [1, 9], "2001": 1, "2002": 1, "2004": 1, "2005": 1, "2011": 9, "2015": 1, "2016": 9, "2017": 9, "2018": [1, 9], "2019": [1, 9], "2020": 1, "2021": [1, 10], "2022": 1, "2023": 1, "2024": 1, "208": 1, "21": [1, 9], "2206": [1, 10], "23": 1, "2408": [1, 10], "2666": 0, "28th": 1, "29": 1, "2cnf": 0, "2sat": [0, 1], "3": [0, 1, 4, 6, 9, 10], "3065": 1, "3087": 1, "317": 1, "32": 0, "35": 0, "37": 1, "38": 1, "38th": 1, "39": 1, "4": [0, 1, 4, 9], "421": 1, "429": 1, "472": 1, "482": 1, "5": [0, 1], "51": 1, "510": 10, "512": 6, "549": 1, "579": 1, "6": [0, 1], "62": 1, "64": 1, "7": 0, "787": 1, "791": 1, "8": [0, 1], "851": 1, "859": 1, "868": 1, "898": 1, "90": 0, "926": 1, "943": 1, "95": [0, 1], "99": 1, "A": [0, 1, 3, 4, 5, 6, 7, 9, 10], "As": 0, "By": 9, "For": [0, 9], "If": [9, 10], "In": [0, 1, 9, 10], "It": [0, 4, 9, 10], "No": 9, "On": 1, "One": 9, "That": 0, "The": [0, 1, 3, 4, 5, 6, 7, 9], "Then": [0, 9], "There": 9, "To": [0, 9, 10], "Will": 1, "aarhu": 1, "ab": 1, "abelian": [3, 6, 10], "abhi": 1, "abl": 9, "abort": 0, "about": [1, 9], "absolut": 9, "abstract": 9, "ac": 9, "accept": [0, 9], "access": 9, "accomplish": [0, 9], "achiev": 9, "achiv": 9, "ack21": [1, 9], "acknowledg": [7, 8], "acm": 1, "act": 9, "activ": [9, 10], "actual": 9, "ad": [0, 1, 6], "add": [0, 4, 6], "add_claus": 4, "add_random_3bits_to_solution_gener": 6, "addit": 9, "addition": 9, "address": 0, "adequ": 9, "adher": 9, "adhoc": 1, "adi": 1, "adjust": 4, "advanc": 1, "advantag": 9, "adversari": 8, "adwait": 1, "after": [0, 3, 5], "ag": 9, "again": 9, "against": 0, "ahmad": 1, "aim": 10, "al": [1, 9], "alessandro": 1, "algebra": 1, "algorithm": [0, 4, 9, 10], "ali": 1, "alic": 9, "align": [0, 9], "all": [0, 3, 4, 6, 9, 10], "alloc": [0, 9], "allow": 9, "almost": [0, 9], "also": [0, 9], "although": 9, "am": 9, "amit": 1, "amo": 1, "amount": [0, 9], "an": [0, 1, 3, 4, 5, 6, 7, 9, 10], "analysi": 8, "analyz": [0, 9], "andrew": 1, "ani": [0, 9], "ann": 1, "annual": 1, "anoth": [6, 9], "api": 10, "appear": [0, 9], "appli": [3, 9], "applic": [1, 9], "apply_gener": 3, "approach": [0, 9], "appropri": 9, "approxim": 0, "ar": [0, 3, 4, 9, 10], "architectur": 9, "archiv": 1, "area": 1, "arg": 4, "argument": [1, 9], "arithmet": 9, "arnab": 1, "around": [0, 1, 9, 10], "arr": 6, "arrai": [3, 6], "arthur": 9, "articl": 8, "arxiv": [1, 10], "asian": 1, "asiancon": 1, "ask": 10, "aspect": [1, 9], "assign": [0, 4], "assiv": 9, "associ": [0, 9], "assum": [0, 9], "assumpt": 9, "assur": [9, 10], "attema": 1, "attempt": 9, "attribut": [0, 4], "aurora": [1, 9], "authent": [1, 9, 10], "author": 0, "autom": 9, "avail": 4, "averag": [0, 6], "average_support": 6, "awar": 1, "axi": 0, "b": 9, "bab85": [1, 9], "babai": [1, 9], "back": 9, "balanc": 6, "bar": 0, "base": [1, 3, 4, 5, 6, 9], "base64": 6, "basic": 1, "batch": 9, "bbmt22": [1, 9], "bccrepeau88": [1, 9], "becom": [0, 4], "begin": 4, "behavior": 0, "being": 9, "below": 9, "ben": [1, 9], "benarroch": 1, "benchmark": 0, "best": 4, "betin": [1, 10], "between": [0, 3, 6, 9], "beyn": 1, "beyond": 9, "bilinear": 9, "bin": 10, "binari": [3, 6, 9], "birth": 9, "bit": [0, 3, 6], "bit_arrai": [3, 6], "bitanski": 9, "bitmask": 3, "bk": 9, "black": 10, "blinder": 6, "block": 10, "bob": 9, "bodi": 1, "bool": [3, 4, 5, 6, 7], "boolean": [4, 9], "both": [0, 9, 10], "bound": 9, "box": 10, "brand\u00e3o": 1, "brassard": [1, 9], "break": 9, "breifli": 10, "briefli": 9, "brtute": 9, "brute": 9, "bscr": [1, 9], "bsgl20": [1, 9], "buchanan": 1, "bug": 9, "build": 10, "built": 9, "bulletproof": 9, "byte": 6, "c": [5, 6, 7, 9, 10], "c1": 6, "c2": 6, "c3": 6, "c_1": 9, "c_k": 9, "calcul": [3, 6], "call": [9, 10], "cambridg": 1, "campaign": 9, "can": [0, 9, 10], "candid": 9, "cannot": 9, "cansu": [1, 10], "cansubetin": 10, "canteaut": 1, "capabl": 9, "captur": 9, "card": 9, "carri": 9, "carsten": 1, "case": [0, 6, 9], "cbd": [1, 9], "ccessibl": 9, "cd": [9, 10], "challang": 9, "challeng": [0, 4, 5, 6, 7, 9], "chang": [0, 10], "channel": [1, 9], "chao": 1, "characterist": 1, "charalampo": 1, "charl": 1, "chaum": [1, 9], "cheat": [0, 5, 9], "check": [3, 4, 6], "check_inst": 4, "checkout": 10, "chiesa": 1, "choic": [9, 10], "choos": [4, 9], "chose": 5, "chosen": [0, 9], "christian": 1, "ci": 9, "circuit": 9, "claim": 9, "class": [3, 4, 5, 6, 7], "classmethod": 6, "claud": 1, "claus": [0, 4, 6], "clear": 0, "clearli": 0, "clock": 9, "clone": 10, "closest": 3, "code": [0, 8, 10], "coin": 9, "coincid": 0, "collis": 9, "com": [9, 10], "combin": [6, 9], "combinatori": 0, "commiment": 0, "commit": [0, 5, 6, 7, 9], "common": 9, "commonli": 9, "commun": [1, 5, 9], "compar": 9, "comparison": 9, "compat": 9, "compet": 9, "compile_api": 10, "complet": [8, 9], "complex": [0, 1, 9, 10], "compon": 9, "comprehens": 9, "compress": 1, "comput": [0, 1, 3, 6, 9], "computation": 9, "concern": 9, "conclud": 0, "concurr": 1, "condit": 9, "confer": 1, "confid": 0, "confidenti": [9, 10], "connect": [1, 9], "consid": 9, "consider": 0, "consist": [0, 9], "constraint": [1, 9], "construct": 9, "consumpt": 9, "contain": [0, 3, 4, 6], "continu": [0, 9], "contribut": 0, "convei": 0, "conveni": 5, "convert": [0, 5, 6, 9], "convert_binary_permutation_to_arrayform_using_blind": 6, "convert_generators_to_arrayform_using_blind": 6, "convert_max2sat_solution_to_subgroupdistance_solut": 6, "convinc": [0, 9], "copi": [9, 10], "core": [0, 9], "correct": 6, "correctli": 9, "correl": 9, "correspond": 6, "could": [0, 9], "count": 0, "cp": 1, "cpu": 9, "cr": [1, 9, 10], "cramer": 1, "creat": [0, 4, 6, 7, 10], "create_default": 4, "create_from_linearized_gener": 6, "create_x_for_variable_i": 6, "create_y_for_variable_i": 6, "create_y_for_variable_i_clause_j": 6, "credenti": 10, "crepeau": 9, "criteria": 0, "crucial": 9, "cryptograph": [1, 6, 9, 10], "cryptographi": 1, "cryptologi": 1, "csr": 9, "current": [4, 5], "cynthia": 1, "d": [1, 9], "dam02": [1, 9], "damgard": 1, "danni": 1, "darmstadt": 1, "data": [0, 6, 7, 9, 10], "date": 9, "david": 1, "dawn": 1, "ddr4": 0, "decis": 9, "decreas": 0, "default": [4, 6], "defin": 9, "definit": [9, 10], "degrad": 9, "degre": 10, "dehghantanha": 1, "delai": 9, "deleg": 1, "deliber": 9, "delv": 9, "demand": 0, "demonstr": 0, "denot": 9, "depart": 1, "depend": [0, 9], "depict": [0, 9], "deploy": 9, "depth": 9, "deriv": [5, 9], "design": [0, 8, 10], "desir": 0, "detail": [0, 9, 10], "develop": [9, 10], "devic": 1, "dict": [3, 6], "dictionari": 3, "differ": 9, "dimac": 4, "dinur": 1, "disadvantag": 9, "disclosur": 1, "discrep": 0, "discret": 9, "dishonest": [0, 9], "dishonestprov": [5, 8], "disk": 9, "distanc": [1, 3, 5, 6, 7, 8, 9, 10], "distinct": [4, 9], "distinguish": 9, "distribut": 9, "divid": 9, "dlp": 9, "dmitri": 1, "dns04": [1, 9], "do": [9, 10], "doc": 1, "doe": 9, "doi": 1, "dolev": [1, 9], "done": 9, "dot": 9, "doubli": 1, "downsid": 9, "due": 0, "dure": [0, 6, 9], "dwork": 1, "dy83": [1, 9], "dynam": 1, "e": [1, 9, 10], "each": [4, 6, 9], "eas": 9, "easi": 9, "easili": 10, "eav": 9, "ecrh": 9, "edund": 9, "effect": 0, "effici": [1, 9], "effort": 0, "eichlsed": 1, "element": [0, 3, 6, 9, 10], "elementari": [3, 6, 10], "elementaryabeliansubgroup": [6, 8], "elementaryabeliansubgroupwithsolut": [3, 6, 8], "eli": 1, "emerg": 9, "emphasi": 9, "empir": 0, "emploi": [0, 9, 10], "empti": 4, "enabl": 9, "encod": 6, "encrypt": 9, "ensur": [0, 4, 9, 10], "entir": [4, 5], "entropi": 0, "enumer": 4, "enumerate_all_assign": 4, "environ": [1, 9, 10], "epiphani": 1, "eprint": 1, "error": [0, 9, 10], "essenti": 9, "et": 9, "etc": 9, "eurocrypt": 1, "evalu": [0, 9], "everi": 9, "everybodi": 9, "exactli": 0, "exampl": 9, "exce": 0, "except": 9, "exchang": 9, "execut": [0, 5, 9], "exist": 9, "exit": 9, "expect": [0, 9], "experi": [0, 9], "explain": 9, "explan": 4, "exponenti": 0, "extend": 6, "extend_gener": 6, "extend_sdp": 6, "extens": 9, "extent": 9, "extract": 9, "extractor": 9, "f": [4, 6], "facilit": 9, "factor": [0, 9], "fail": [0, 9], "failur": 0, "fals": [0, 3, 4, 5, 6, 7, 9], "featur": [9, 10], "fiat": [1, 9], "fig": [0, 9], "figur": 0, "file": [4, 9], "filenam": 4, "filepath": 4, "final": 9, "find": [0, 3, 4, 10], "first": [0, 3, 4, 6, 9], "firstli": 0, "fix": 0, "flection": 9, "fluctuat": 0, "focu": 9, "folder": [4, 10], "folder_path": 4, "follow": 9, "forc": 9, "forget": 10, "form": [6, 9], "formal": 9, "format": [4, 9], "formula": [0, 4], "fortnow": 1, "found": [4, 9], "foundat": [1, 10], "four": 4, "frac": [0, 9, 10], "friendli": [1, 9], "from": [0, 3, 4, 5, 6, 7, 8, 9], "fs86": [1, 9], "fulli": 9, "function": [0, 1, 9], "fundament": 9, "futur": 10, "g": [3, 6, 9, 10], "ga": 1, "gain": 9, "game": 9, "gate": 9, "gb": 0, "gener": [1, 3, 4, 5, 6, 7, 8, 9, 10], "generate_all_el": 3, "generate_commit": 6, "generate_element_from_bitarrai": 3, "generate_instance_motoki": 4, "generate_permutation_g_in_sn": 6, "generate_random_3bit": 6, "generate_random_arrai": 6, "generate_random_blind": 6, "generate_satisfiable_claus": 4, "generate_unsatisfiable_claus": 4, "generate_unsatisfiable_specific_claus": 4, "generate_z1_and_z2": 6, "generator_v": 6, "generators_arrayform": 6, "generators_support": 6, "germani": 1, "get_bit_i_of_gener": 6, "ghz": 0, "gill": 1, "git": 10, "github": [9, 10], "give": 9, "given": [3, 4, 5, 6, 7, 9, 10], "gkr": [1, 9], "gkr15": [1, 9], "gmr89": [1, 9], "goal": [0, 9], "goldberg": 1, "goldreich": 1, "goldwass": 1, "govern": 9, "grassi": 1, "greater": 0, "greedi": 4, "gregor": 1, "gregori": 1, "groth": 9, "groundbreak": 9, "group": [1, 3, 6, 9, 10], "group_triplet": 6, "grow": 0, "grpc": [5, 9, 10], "grpc_stub": 5, "grpcio": 10, "gui": 1, "h": [6, 9, 10], "h_withsolut": 6, "ha": [0, 9, 10], "haider": 1, "hal": 1, "halt": 0, "ham": [3, 6, 9, 10], "hamming_dist": [3, 6], "hammoudeh": 1, "hand": 9, "handl": [0, 7, 9], "handlecommit": 7, "handlesetup": 7, "handleverifi": 7, "hard": 9, "hash": [1, 6, 9], "have": [0, 9, 10], "he": [0, 9], "heather": 1, "help": 10, "here": [0, 9], "heurist": 9, "hidden": 9, "high": 0, "highlight": [0, 9], "hoc": 1, "honest": [0, 5, 9], "honestprov": [5, 8], "how": [1, 4, 9], "howard": 1, "howev": [0, 9], "http": [1, 10], "human": 4, "hyrax": 9, "i": [0, 1, 3, 4, 5, 6, 7, 9, 10], "iacr": 1, "id": [1, 5, 6, 7], "idea": 9, "ident": [3, 9], "identif": [1, 9, 10], "identifi": [5, 7], "ieee": 1, "illustr": 0, "im": 9, "imac": 0, "imp": 9, "imperson": 9, "implement": 9, "implic": 9, "includ": [0, 3, 4, 6, 9], "incorpor": 10, "increas": 0, "independ": 9, "index": [3, 4, 6, 8], "indic": [0, 3, 6, 7], "indistinguish": 9, "induc": 9, "infinit": 9, "inform": [1, 9, 10], "infrastructur": 9, "inherit": 5, "initi": [3, 4, 5, 6, 7, 9], "inner": 9, "innov": 1, "input": 9, "insid": 9, "insight": 0, "insignific": 9, "instal": [8, 9], "instanc": [1, 3, 4, 5, 6, 7, 8, 9], "instance_id": [5, 7], "instead": 9, "int": [3, 4, 5, 6, 7, 9], "integ": [6, 9], "integr": 9, "intel": 0, "intellectu": 9, "intellig": 9, "interact": [1, 9, 10], "interfac": 9, "interleav": 9, "intern": 1, "internet": 10, "interv": 0, "intract": [1, 9, 10], "introduc": 9, "introduct": 8, "invers": 3, "inverse_permut": 3, "invert": 3, "invoc": 9, "involv": 9, "ioanna": 1, "iop": 9, "iot": 1, "ip": 9, "is_clause_satisfi": 4, "is_satisfi": 4, "is_valid_permut": 3, "issu": 9, "itai": 1, "iter": 4, "its": [6, 9], "itself": 9, "ivan": 1, "j": [1, 3, 6], "jacm": 1, "jawad": 1, "jiaheng": 1, "journal": 1, "just": [5, 9], "justin": 1, "k": [0, 6, 9, 10], "k_prime": 6, "kalai": 1, "karloff": 1, "kato": 1, "keep": 9, "kei": [1, 9], "khairnar": 1, "khateeb": 1, "khovratovich": 1, "knapsack": 9, "know": [0, 9], "knowledg": [0, 1, 5, 6, 7, 9, 10], "known": [0, 9], "kohl": 1, "kosaraju": 4, "l": [1, 9], "lanc": 1, "languag": 9, "larger": [0, 9], "latenc": 9, "latest": 10, "lattic": [1, 9], "leak": 9, "leakag": 9, "leander": 1, "learn": 9, "lectur": 1, "leftrightarrow": 9, "length": [6, 9], "less": 0, "let": 9, "leurent": 1, "level": [0, 8], "levit": 1, "lfkn92": [1, 9], "liao": 1, "libra": [1, 9], "life": 9, "ligero": 9, "lightweight": [9, 10], "like": [0, 9], "limit": 9, "line": 0, "linear": [0, 6], "linearize_gener": 6, "linearized_gener": 6, "linearli": 0, "linux": 9, "lior": 1, "lisa": 1, "list": [3, 4, 6, 7, 9], "listen": 9, "liter": 4, "literatur": 9, "load": 0, "locat": 9, "log": 9, "logarithm": 9, "lorenzo": 1, "low": 0, "lower": [0, 9], "lund": 1, "m": [1, 6, 9, 10], "machin": 9, "maco": 9, "madar": 1, "made": [5, 9], "mai": [0, 1, 9], "main": [0, 9], "mainli": 0, "maintain": 9, "mainten": 9, "major": [1, 9], "make": [4, 9, 10], "malici": 9, "maller": 1, "man": 9, "manag": 9, "mani": [4, 9, 10], "map": 6, "mar": 1, "marcu": 1, "maria": 1, "marku": 1, "martin": 1, "masquerad": 9, "mat": 9, "match": 6, "mathcal": 9, "mathemat": [0, 9], "matter": 9, "max": [0, 1, 4], "max2sat": [5, 6, 8], "max2sat_inst": 6, "max2sat_instance_solut": 6, "maxim": [0, 4], "maximum": 6, "mba20": [1, 9], "mean": [0, 9], "measur": [0, 9], "mechan": 9, "meet": 0, "member": 6, "membership": 9, "memori": 9, "merlin": 9, "messag": [7, 9], "method": [1, 4, 9], "metric": [8, 10], "mhz": 0, "micali": 1, "michael": 1, "middl": 9, "might": 9, "min_dist": 6, "mind": 9, "minim": 9, "minimum": [1, 6], "minor": 9, "mislead": 9, "mistuo": 1, "mod": 9, "mode": 9, "model": 8, "modifi": 9, "modul": [8, 9], "modulo": 9, "mohammad": 1, "moni": 1, "more": [0, 4, 9], "most": [4, 9, 10], "mostli": 9, "mot05": [0, 1], "motoki": [0, 1], "mou": 10, "move": 9, "mubarak": 1, "much": 9, "muggl": 1, "multipl": 3, "multipli": 3, "multiply_gener": 3, "multiply_permut": 3, "multiply_solution_gener": 3, "mutual": 9, "n": [1, 3, 4, 6, 9, 10], "name": 9, "naor": 1, "naya": 1, "need": 9, "neg1": 4, "neg2": 4, "negat": 4, "negate_liter": 4, "neglig": 9, "network": 1, "never": 9, "new": [1, 3, 9, 10], "next": 9, "nichola": 1, "nisan": 1, "nizkp": 9, "nlnet": 10, "noam": 1, "node": 9, "non": [1, 9], "nonc": 9, "none": [0, 4, 6], "nonlinear": [0, 1], "note": 1, "noth": 9, "nov": 1, "novel": [0, 10], "np": [0, 9, 10], "num_claus": 4, "num_satisfied_claus": 4, "num_transpositions_in_gener": 6, "num_vari": [4, 5], "number": [0, 3, 4, 5, 6, 9, 10], "number_of_round": 5, "o": [0, 1, 9], "obscur": 10, "obtain": 9, "octob": 1, "od": 1, "ode01": [1, 9], "often": 9, "old": 9, "older": 9, "onc": 9, "one": [0, 4, 9], "onli": [0, 3, 9], "onu23": [1, 10], "onu24": [0, 1, 9, 10], "onur": [1, 10], "oper": 9, "optim": [0, 1, 4, 9], "option": [4, 6], "oracl": 9, "org": 1, "origin": 9, "other": [1, 9], "otherwis": [0, 3, 4, 5, 6, 7], "ound": 9, "our": [0, 10], "out": 9, "outlin": 9, "output": [4, 9], "outsid": 9, "overal": [0, 5, 9], "own": 3, "ownership": 10, "p": [1, 6, 9], "p1": [3, 6], "p2": [3, 6], "packag": 8, "page": 8, "pair": [4, 9], "papamanth": 1, "paper": [0, 1], "paradigm": 9, "paralleliz": 9, "paramet": [0, 3, 5, 6, 7, 9], "paramount": 9, "part": [1, 9], "parti": 9, "partial": 10, "particularli": 0, "passiv": 9, "past": 9, "path": 4, "pathak": 1, "patil": 1, "pattern": 0, "pawar": 1, "peau": 1, "pedersen": 9, "per": 9, "perfect": 9, "perform": [6, 8], "perm": [3, 6], "perm1": 3, "perm2": 3, "permit": 9, "permut": [3, 6], "perrin": 1, "person": 9, "phase": [7, 9], "piec": [9, 10], "pip": 10, "pipelin": 9, "piyush": 1, "place": 9, "plai": 9, "plasencia": 1, "platform": 10, "pleas": 0, "plete": 9, "plot": 0, "point": 0, "polylog": 9, "polynomi": 9, "pose": 9, "poseidon": 1, "possess": [1, 9], "possibl": [4, 9], "power": 9, "ppp": [1, 9], "ppt": 9, "practic": [1, 9], "prefer": 10, "prepar": 9, "prerequisit": 8, "present": [0, 9, 10], "preserv": [9, 10], "press": 1, "previou": 9, "previous": 9, "primari": 9, "prime": 9, "primit": 10, "princip": [9, 10], "principl": [1, 9], "print": [3, 4, 6], "print_all_el": 3, "print_claus": 4, "print_gener": 6, "print_generators_arrayform": 6, "print_inst": 4, "privaci": [1, 9], "privat": 9, "privileg": 9, "probabilist": 9, "probabl": [0, 9], "problem": [1, 3, 4, 5, 6, 7, 8, 9, 10], "proceed": 1, "process": [0, 6, 9], "produc": [0, 3, 9], "producess": 0, "product": 9, "program": [1, 9], "project": [9, 10], "proof": [0, 1, 5, 6, 7, 9, 10], "properti": [0, 9, 10], "propos": [0, 9], "proto": 10, "protobuf": 10, "protocol": [0, 1, 5, 7, 9, 10], "prove": [0, 1, 9], "proven": 9, "prover": [1, 7, 8, 9], "provid": [0, 7], "pseudorandom": 10, "public": [0, 1, 9], "publicli": 9, "py": 10, "pypi": 10, "python": 9, "python3": 10, "q": 6, "q_1": 9, "q_1q_2": 9, "q_2": 9, "q_origin": 6, "quadrat": 9, "quantum": 9, "question": 9, "r": [6, 9, 10], "r1c": [1, 9], "rackoff": 1, "ram": 0, "random": [0, 1, 3, 4, 6, 7, 9], "random_binary_arrai": 3, "random_bit": 6, "random_el": 3, "randomli": [0, 4, 5, 6, 9], "rang": 0, "rank": 9, "rapidli": 0, "ratio": 0, "raut": 1, "rd": 7, "re": 9, "read": 4, "read_dimacs_fil": 4, "read_filenames_in_fold": 4, "read_solution_from_fil": 4, "readabl": 4, "real": 9, "reason": 1, "receiv": [5, 7, 9], "recent": 9, "rechberg": 1, "recommend": 1, "reduc": [1, 6, 9], "reduce_to_sdp_and_extend": 6, "reduce_to_sdp_for_variable_i": 6, "redund": 9, "refer": [0, 8, 9], "reflect": 9, "regard": 9, "reject": 9, "rel": [0, 9], "relat": [8, 9], "relationship": 0, "relax": 9, "reli": [0, 9], "remain": [0, 9], "remedi": 9, "repeat": 9, "replai": 9, "report": 1, "repres": [0, 3, 4, 6, 9], "represent": 6, "request": 9, "requir": [0, 8, 10], "research": 9, "resend": 9, "residu": 9, "resist": 9, "resourc": [0, 9], "respect": [6, 9], "respond": 5, "respons": [0, 5, 7, 9], "result": [0, 3, 4, 5, 6, 7], "retriev": [6, 9], "return": [0, 3, 4, 5, 6, 7], "reusabl": 10, "reveal": [0, 9], "revious": 9, "revolv": 9, "riabzev": 1, "riad": 1, "rigor": [0, 9], "rise": [0, 9], "rleav": 9, "robust": 9, "roi": 1, "role": 9, "ronald": 1, "root": [9, 10], "rothblum": 1, "round": [0, 5, 6, 7, 9, 10], "round_data": 6, "round_id": [5, 6], "round_result": 6, "rsonat": 9, "run": [0, 5, 9, 10], "run_round": 5, "s_": 9, "s_n": 10, "safe": 9, "sahai": 1, "sai": 9, "said": 9, "same": 9, "sasaki": 1, "sasson": [1, 9], "sat": 4, "satisfact": 9, "satisfi": [0, 4, 6, 9], "scalabl": 9, "scale": 0, "scc": 4, "scenario": [0, 9], "scheme": [1, 9, 10], "schofnegg": 1, "scienc": 1, "sdrop": 9, "sdzkp": 0, "sdzkp_pb2": 7, "sdzkp_prover": 10, "sdzkp_verifi": 10, "search": [8, 10], "second": [0, 1, 3, 4, 6], "secret": [9, 10], "section": [0, 9], "secur": [1, 8, 10], "see": 9, "seed": [6, 7], "seen": [9, 10], "select": [0, 4, 9, 10], "self": 1, "send": [5, 9], "sender": 9, "sensit": 9, "sent": 7, "sequel": 0, "sequenc": 9, "set": [0, 3, 4, 5, 6, 9], "set_se": 6, "setup": [1, 5, 7, 8, 9], "setup_sdzkp_round": 6, "setupack": 7, "seventeenth": 1, "sgd": [0, 5, 7, 8], "sgdinst": 7, "sgdinstanc": 7, "sh": 10, "sha3": 6, "shafi": 1, "shamir": [1, 9], "share": 10, "she": 9, "shelat": 1, "short": 9, "shorter": 9, "should": 9, "show": [0, 9], "shown": 9, "shubham": 1, "siam": 1, "sigma": [1, 9], "sign": 9, "signatur": 1, "signific": [0, 9], "significantli": 0, "silvio": 1, "similar": 9, "simul": [0, 9], "sinc": [0, 3], "singl": [3, 5, 6], "sitg": 1, "size": [0, 6, 9], "skill": 9, "slightli": 0, "small": 0, "smita": 1, "smooth": 9, "sn": [3, 6], "snark": 9, "so": 9, "softwar": 8, "solut": [0, 1, 3, 4, 5, 6, 9], "solution_t_h": [3, 6], "solv": [3, 4, 9], "some": 9, "sometim": 9, "song": 1, "sound": [8, 9, 10], "sourc": [3, 4, 5, 6, 7, 8], "sp": 1, "space": 9, "spain": 1, "special": [9, 10], "specif": [0, 4, 8], "specifi": [3, 4, 5, 9], "spike": 0, "spooner": 1, "springer": 1, "sqare": 9, "sqrt": 9, "stabl": 0, "stark": [1, 9], "statement": 9, "statist": [9, 10], "step": 9, "stern": [9, 10], "stop": 0, "storag": [6, 9], "store": 7, "str": [4, 5, 6, 7], "straight": 0, "string": [6, 9], "strong": [9, 10], "stronger": 9, "stub": 5, "studi": [0, 10], "subclass": [3, 6], "subgroup": [1, 3, 5, 6, 7, 8, 9, 10], "subgroupdistanceproblem": [6, 7, 8], "subgroupdistanceproblemwithsolut": [5, 6, 8], "subgroupdistanceround": [6, 7, 8], "sublinear": 9, "subsequ": 9, "subset": [0, 9], "substanti": 9, "succe": 7, "success": [5, 7, 9], "succinct": [1, 9], "suffici": 9, "suggest": 0, "sum": [6, 9], "sumcheck": 9, "support": [6, 9, 10], "survei": 1, "symmer": 10, "symmetr": [3, 6], "symposium": 1, "system": [0, 1, 9, 10], "szl": 1, "t": [0, 4, 6], "t_r": [6, 7], "t_u": [6, 7], "tabl": 9, "take": [0, 9], "tan": 1, "target": [3, 6], "task": [8, 9], "tauman": 1, "tckk": 9, "techniqu": 1, "technologi": 1, "teja": 1, "term": 9, "termin": 10, "test": [0, 1, 6, 9], "test_membership": 6, "text": 9, "tf": 6, "th": 6, "thaler": 1, "than": [0, 9], "thei": [9, 10], "them": [5, 6, 10], "theoret": [0, 1, 9, 10], "theori": 1, "therefor": 0, "thi": [0, 4, 5, 9, 10], "third": [0, 9], "thoma": 1, "those": [0, 9], "threat": 8, "three": 9, "threshold": 0, "through": 9, "tiancheng": 1, "tim": 1, "time": [0, 9], "todo": 1, "tom87": [1, 9], "tompa": [1, 9], "tool": [0, 1, 10], "top": 8, "toss": 9, "total": 0, "track": 9, "trade": 1, "transact": 1, "transcript": 9, "transform": 9, "transmiss": 9, "transpar": [1, 9], "transpos": 3, "transposit": [3, 6], "trend": 0, "tri": [0, 5, 9], "triplet": 6, "tromer": 1, "true": [0, 3, 4, 5, 6, 7, 9], "trust": [1, 9], "trustworthi": 10, "truth": [0, 4, 9], "try": 9, "ttp": 9, "tupl": [3, 4, 5, 6], "ture": 9, "tw87": [1, 9], "two": [0, 3, 4, 6, 9, 10], "txt": [9, 10], "type": [3, 5, 6, 7, 9, 10], "typic": 0, "tzialla": 1, "u": [6, 9], "umar": 1, "unbound": 9, "uncertainti": 0, "under": [4, 9, 10], "underli": [4, 9], "underpin": 9, "uniform": 9, "unintend": 9, "uniqu": [5, 7], "unit": 9, "univari": 9, "univers": 1, "unsatisfi": [0, 4], "until": [0, 4], "up": [5, 6, 9], "updat": [6, 9], "uphold": 9, "upward": 0, "url": 1, "us": [0, 1, 3, 4, 6, 7, 9, 10], "usenix": 1, "user": 9, "usual": 9, "util": 9, "uwl21": [1, 9], "v": 9, "valid": [3, 8, 9], "valu": [0, 6, 7], "var1": 4, "var2": 4, "variabl": [0, 4, 5, 6], "variant": 9, "variou": 9, "vasilio": 1, "vector": [6, 9], "venv": 10, "verac": 10, "veri": 9, "verif": [0, 5, 7, 9], "verifi": [5, 8, 9, 10], "verificationresult": 7, "verify_0": 7, "verify_1": 7, "verify_2": 7, "version": [1, 9, 10], "via": [5, 9], "view": 9, "view_": 9, "virtual": 10, "virza": 1, "visibl": 0, "visual": 0, "volum": 1, "w": [0, 9], "wa": [5, 7], "wahbi": [1, 9], "walfish": 1, "walsh": 1, "want": 9, "ward": 1, "we": [0, 3, 9, 10], "weak": [1, 9], "well": [0, 9], "whatev": 9, "when": [0, 9], "whenev": 9, "where": [0, 4, 9], "wherea": 9, "whether": [4, 6, 7, 9], "which": [0, 3, 9, 10], "while": [0, 4, 9], "whose": 4, "why": 0, "wide": [9, 10], "widen": 0, "william": 1, "window": 9, "wit": 9, "within": [9, 10], "without": [1, 9, 10], "woll": [1, 9], "word": 9, "work": [0, 9, 10], "write": 4, "write_solution_to_fil": 4, "written": 4, "wt": [1, 9], "wu": 1, "x": [0, 9], "x1": 4, "x2": 4, "x_i": 6, "x_r1": 4, "x_r2": 4, "x_r3": 4, "x_r4": 4, "xeon": 0, "xie": 1, "xor": 6, "xor_and_check_combin": 6, "xuen": 1, "xzz": [1, 9], "y": 0, "y_i": 6, "y_ij": 6, "yael": 1, "yao": [1, 9], "year": 9, "yosuk": 1, "you": 10, "yourself": 1, "yu": 1, "yupeng": 1, "z": 9, "z1": [6, 7], "z2": [6, 7], "z_1": 9, "z_k": 9, "z_n": 9, "zcash": 9, "zero": [0, 1, 5, 6, 7, 9, 10], "zhang": 1, "zhenqiang": 1, "zk": 9, "zkp": [5, 7, 8, 10], "zkproof": 1, "zksnark": 1, "\u00e1": 1, "\u00e9": 1, "\u00eb": 1, "\u00ed": 1, "\u00f3": 1}, "titles": ["<span class=\"section-number\">4. </span>Performance and Security Analysis", "<span class=\"section-number\">6. </span>References", "<span class=\"section-number\">5. </span>Code Documentation", "<span class=\"section-number\">5.2. </span>sdzkp.elementaryabeliansubgroup", "<span class=\"section-number\">5.1. </span>sdzkp.max2sat", "<span class=\"section-number\">5.3. </span>sdzkp.prover", "<span class=\"section-number\">5.5. </span>sdzkp.sgd", "<span class=\"section-number\">5.4. </span>sdzkp.verifier", "SDZKP Documentation", "<span class=\"section-number\">3. </span>SDZKP Specification", "<span class=\"section-number\">1. </span>Introduction"], "titleterms": {"acknowledg": 10, "adversari": 9, "analysi": [0, 9], "articl": 10, "attack": 9, "code": 2, "complet": 0, "content": 8, "design": 9, "distanc": 0, "document": [2, 8], "elementaryabeliansubgroup": 3, "from": 10, "gener": 0, "indic": 8, "instal": 10, "instanc": 0, "introduct": 10, "level": 9, "max2sat": [0, 4], "metric": 9, "model": 9, "packag": 10, "perform": [0, 9], "potenti": 9, "prerequisit": 10, "problem": 0, "prover": [0, 5], "refer": 1, "relat": 0, "requir": 9, "sdzkp": [3, 4, 5, 6, 7, 8, 9, 10], "secur": [0, 9], "setup": 0, "sgd": 6, "softwar": 9, "sound": 0, "sourc": 10, "specif": 9, "subgroup": 0, "tabl": 8, "task": 0, "threat": 9, "top": 9, "valid": 0, "verifi": [0, 7], "zkp": 9}})